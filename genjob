#!/bin/sh

# Usage: farm_list
#
# This script creates batch_krun and jscript_krun in batch_files directory
# and submits the job to the farms
#
# Feb. 22, 2011 Zhihong Ye
# Feb. 20, 2018 updated for Triton - single arm  (T.Hague & E.McClellan)
# May  14, 2018 updated for Triton - coincidence (T.Hague & R.Cruz-Torres)

#home=/work/halla/triton/replay_eep/
username=${USER}@jlab.org    # email which will be notify when the job is done
#
# Check whether the raw data are in cache or not
#
RAWDIR=/mss/halla/triton/raw/
CACHEDIR=/cache/mss/halla/triton/raw/

#
# Function to check if input is an integer
#
is_integer() {
 case $1 in
  *[!0-9]*) return 1;;
  *) return 0;;
 esac
}

runfile=$1
echo $runfile
midfix0=${runfile%.*}
kin0=${runfile%_kin*}

midfix=${midfix0#infiles/}
kin=${kin0#infiles/}

echo ${kin}

while read krun; do
COUNT=0
#If the data is already in the cache, replay it
if [ -e $CACHEDIR"/triton_"$krun".dat."$COUNT ]; then

OUTFILE="/volatile/halla/triton/eep_Rootfiles/pass1/tritium_"${krun}".root"

# ------------------------------------------------------------------------------
# Verify if batch_files and .tmp.REPLAY exist
    if ! [ -d batch_files ]
	then 
	echo "----------------------------------------------------------------"
	echo "I need batch_files directory. I am going to create it"
	echo  
	mkdir batch_files
    fi 

    echo
# ------------------------------------------------------------------------------
# Write file batch_krun
#
    rm -f batch_files/batch_${krun}
    echo "#!/bin/sh" >> batch_files/batch_${krun}
    echo "source /apps/root/6.12.04/setroot_CUE.bash" >>batch_files/batch_${krun}
    echo "export ANALYZER=/work/halla/triton/Rey/Tritium/analyzer-1.6.0" >>batch_files/batch_${krun}

    echo "export DB_DIR=/work/halla/triton/Rey/Tritium/HallA-Online-Tritium/replay/DB" >>batch_files/batch_${krun}

    echo "export LD_LIBRARY_PATH=\${ANALYZER}::\$ROOTSYS/lib:\${LD_LIBRARY_PATH}" >>batch_files/batch_${krun}
    echo "export PATH=\${ROOTSYS}/bin:\${ANALYZER}:\${PATH}" >>batch_files/batch_${krun}

    echo "export OUT_DIR=pass1" >>batch_files/batch_${krun}

    echo "cd /work/halla/triton/Rey/Tritium/HallA-Online-Tritium/replay" >>batch_files/batch_${krun}

    echo "rm -f /volatile/halla/triton/eep_Rootfiles/pass1/triton_"${krun}"*.root" >>batch_files/batch_${krun}

    echo " ">>batch_files/batch_${krun}
    echo "./fullReplay "${krun} >>batch_files/batch_${krun}

    echo "cd /volatile/halla/triton/eep_Rootfiles/pass1/" >>batch_files/batch_${krun}
    echo "#for f in tritium_"${krun}"*.root; do" >>batch_files/batch_${krun}
    echo "#  swif outfile /volatile/halla/triton/eep_Rootfiles/pass1/\$f mss:/mss/halla/triton/prod/coinc_eep/pass1/${kin}/\$f" >>batch_files/batch_${krun}
    echo "#  echo \"Found \"\$f" >>batch_files/batch_${krun}
    echo "#done" >>batch_files/batch_${krun}

#  
    chmod +x batch_files/batch_${krun}
    
    echo "batch_files/batch_"${krun}" has been created!"
    echo " "
    
# ------------------------------------------------------------------------------
# Write the jsub script
#
    rm -f batch_files/jscript_${krun}
    echo "PROJECT     triton" > batch_files/jscript_${krun}
    echo "COMMAND     /work/halla/triton/Rey/Tritium/batch_farm/batch_files/batch_"${krun} >>batch_files/jscript_${krun}
    echo "JOBNAME     H3.${midfix}replay"${krun} >>batch_files/jscript_${krun}
    echo "TRACK       analysis" >> batch_files/jscript_${krun}
    echo "TIME        500" >>batch_files/jscript_${krun}
    echo "MEMORY      5000 MB" >>batch_files/jscript_${krun}
    echo "OS          centos7" >>batch_files/jscript_${krun}
    echo "SINGLE_JOB:    true" >>batch_files/jscript_${krun}
    
    echo "batch_files/jscript_"${krun}" has been created."
    echo " " 
    echo "Now, let us wait for the farms..."
    echo " "

# ------------------------------------------------------------------------------
# Submit job to the farm
    if ! [ -e $OUTFILE ]
    then
        swif add-jsub -workflow tritium_eep_${midfix}_replay -create -script ./batch_files/jscript_${krun}
    else
        echo "output root file already exists. Won't be submitting to the workflow"
    fi
# ------------------------------------------------------------------------------

    echo "Job "${krun} "has been submited!"
    echo
    echo
#
    sleep 1
    
else
    echo
    echo "***** Cache the raw files for ${krun}, please do your replay later when it is done *****"
echo

fi
done < $runfile

echo
echo "***** Good Bye and thank you for using the script *****"
echo
